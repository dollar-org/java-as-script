<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="deploy_to_distribute" name="relproxy_dev" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <path id="maven-ant-tasks.classpath" path="ant/maven-ant-tasks-2.1.3.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="antlib:org.apache.maven.artifact.ant"
             classpathref="maven-ant-tasks.classpath" />    
    
    <property file="conf/conf_local.properties"/>  <!-- just define property: maven_folder -->
    <property file="conf/conf.properties"/>

    <property name="distribution_folder" value="${program}/../relproxy_dist_tmp" />
    <property name="distribution_tmp_folder" value="${distribution_folder}/relproxy" />
    <property name="maven_dist_folder" value="${distribution_folder}/maven_dist" />    
    <property name="pom" value="${program}/pom.xml" />   
    
    <target name="deploy_to_distribute" depends="deploy_binaries_and_manual,deploy_cmd_examples,deploy_javadoc,deploy_sources">  <!-- ,deploy_manual -->

        <echo message="DO NOT FORGET TO CHANGE version num in conf.properties, RelProxy.getVersion() and Manual (and date)" />

        <copy file="${program}/LICENSE-2.0.txt" tofile="${distribution_tmp_folder}/LICENSE-2.0.txt" />
        <!-- <copy file="${progrREADME.tmpl.mdE.md" tofile="${distribution_tmp_foldREADME.tmpl.mdE.md" /> -->
        <copy file="${program}/CHANGES.txt" tofile="${distribution_tmp_folder}/CHANGES.txt" />

        <delete dir="${distribution_tmp_folder}/tmp" />        
        
        <property name="distribution_file" value="${distribution_tmp_folder}/../RelProxy_dist_${program.version}.zip" />        
        <delete file="${distribution_file}" />
        <zip basedir="${distribution_tmp_folder}" destfile="${distribution_file}" />        
        <!--<tar basedir="${distribution_tmp_folder}" destfile="${distribution_file}" compression="gzip" />-->      
    </target>

    <target name="deploy_binaries_and_manual">  <!-- ,deploy_manual -->

        <property name="relproxy_jar" value="relproxy-${program.version}.jar" />
        <property name="relproxy_jar_path" value="${program.target}/${relproxy_jar}" />  

        <artifact:mvn pom="${pom}" mavenHome="${maven_folder}" fork="true"> <!-- fork="true" is needed: https://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=47645 -->
            <arg value="clean"/>
        </artifact:mvn>
        <artifact:mvn pom="${pom}" mavenHome="${maven_folder}" fork="true"> <!-- fork="true" is needed: https://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=47645 -->
            <arg value="compile"/>
        </artifact:mvn>                  
        <artifact:mvn pom="${pom}" mavenHome="${maven_folder}" fork="true"> <!-- fork="true" is needed: https://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=47645 -->
            <arg value="jar:jar"/>
        </artifact:mvn>        
        
        <property name="distribution_tmp_folder_lib" value="${distribution_tmp_folder}/lib" />
        <delete dir="${distribution_tmp_folder_lib}" />
        
        <copy file="${program.target}/${relproxy_jar}" todir="${distribution_tmp_folder_lib}" preservelastmodified="true"   />

        <property name="distribution_tmp_folder_bin" value="${distribution_tmp_folder}/bin" />
        <delete dir="${distribution_tmp_folder_bin}" />

        <copy file="${program}/bin/jproxysh" todir="${distribution_tmp_folder_bin}" preservelastmodified="true"   />

        <fixcrlf srcdir="${distribution_tmp_folder_bin}" includes="jproxysh" eol="lf" eof="remove" />   <!-- Goodbye Windows encoding -->        
        
        <chmod file="${distribution_tmp_folder_bin}/jproxysh" perm="+x"/>        
        
        <!-- Manual is also generated by Maven -->
                
        <property name="distribution_tmp_folder_manual" value="${distribution_tmp_folder}/docs/manual" />        
        
        <delete dir="${distribution_tmp_folder_manual}" />
                
        <copy todir="${distribution_tmp_folder_manual}" preservelastmodified="true">
          <fileset dir="${program.target}/generated-docs/"/>
        </copy>        

        <!-- Para subir a Maven Central/JCenter -->
        <delete file="${maven_dist_folder}/${relproxy_jar}" />        
        <copy file="${relproxy_jar_path}" todir="${maven_dist_folder}" preservelastmodified="true"   /> 

    </target>

    <target name="deploy_cmd_examples">

        <property name="src_cmd_examples" value="${program}/src/main/cmd_examples" />
        <property name="distribution_cmd_examples" value="${distribution_tmp_folder}/cmd_examples" />
        
        <property name="src_shell_ex_code" value="${program}/src/test/resources" />
        <property name="distribution_shell_ex_code" value="${distribution_tmp_folder}/cmd_examples/code" />        
        
        <delete dir="${distribution_cmd_examples}" />        
        
        <copy todir="${distribution_cmd_examples}" >
            <fileset dir="${src_cmd_examples}" />
        </copy>        
        
        <delete file="${distribution_cmd_examples}/README.txt" />        

        <copy todir="${distribution_shell_ex_code}" >
            <fileset dir="${src_shell_ex_code}" />
        </copy>         
        
        <fixcrlf srcdir="${distribution_cmd_examples}" includes="**" eol="lf" eof="remove" />   <!-- Goodbye Windows encoding -->     
        
        <chmod file="${distribution_cmd_examples}/*.sh" perm="+x"/>        
        
        <chmod file="${distribution_shell_ex_code}/example_java_shell" perm="+x"/>        
        <chmod file="${distribution_shell_ex_code}/example_java_shell_complete_class" perm="+x"/> 
                
    </target>


    <target name="deploy_javadoc">
        <property name="javadoc_jar" value="relproxy-${program.version}-javadoc.jar" />              
        <property name="javadoc_jar_path" value="${program.target}/${javadoc_jar}" />         
        <property name="javadoc_dir_target" value="${distribution_tmp_folder}/docs/javadoc" />
                
        <artifact:mvn pom="${pom}" mavenHome="${maven_folder}" fork="true"> <!-- fork="true" is needed: https://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=47645 -->
            <arg value="clean"/> <!-- necesario, la mierda del Maven genera el javadoc encima de lo que ya hubiera pudiendo mezclarse con archivos anteriores -->
        </artifact:mvn>        
        
        <delete dir="${javadoc_dir_target}" />        
        <artifact:mvn pom="${pom}" mavenHome="${maven_folder}" fork="true"> <!-- fork="true" is needed: https://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=47645 -->
            <arg value="javadoc:jar"/>
        </artifact:mvn>            
        <unzip src="${javadoc_jar_path}" dest="${javadoc_dir_target}"/>
          
        <!-- Para subir a Maven Central/JCenter -->
        <delete file="${maven_dist_folder}/${javadoc_jar}" />        
        <copy file="${javadoc_jar_path}" todir="${maven_dist_folder}" preservelastmodified="true"   />        
    </target>
    
    <target name="deploy_sources">
        <!-- Para subir a Maven Central/JCenter -->               
                
        <artifact:mvn pom="${pom}" mavenHome="${maven_folder}" fork="true"> <!-- fork="true" is needed: https://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=47645 -->
            <arg value="clean"/> <!-- necesario, la mierda del Maven genera los sources encima de lo que ya hubiera pudiendo mezclarse con archivos anteriores -->
        </artifact:mvn>        
                
        <!-- Sources sin test -->        
        <property name="sources_jar" value="relproxy-${program.version}-sources.jar" />              
        <property name="sources_jar_path" value="${program.target}/${sources_jar}" />         
                
        <artifact:mvn pom="${pom}" mavenHome="${maven_folder}" fork="true"> <!-- fork="true" is needed: https://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=47645 -->
            <arg value="source:jar"/>
        </artifact:mvn>            
          
        <delete file="${maven_dist_folder}/${sources_jar}" />        
        <copy file="${sources_jar_path}" todir="${maven_dist_folder}" preservelastmodified="true"   />        
        
        <!-- Source de los tests -->
        <property name="test_sources_jar" value="relproxy-${program.version}-test-sources.jar" />              
        <property name="test_sources_jar_path" value="${program.target}/${test_sources_jar}" />
                
        <artifact:mvn pom="${pom}" mavenHome="${maven_folder}" fork="true"> <!-- fork="true" is needed: https://netbeans.org/bugzilla/show_bug.cgi?format=multiple&id=47645 -->
            <arg value="source:test-jar"/>
        </artifact:mvn>            
          
        <delete file="${maven_dist_folder}/${test_sources_jar}" />        
        <copy file="${test_sources_jar_path}" todir="${maven_dist_folder}" preservelastmodified="true"   />        
        
        <!-- El POM -->
        <property name="pom_source_path" value="${program}/pom.xml" />  
        <property name="pom_target_path" value="${maven_dist_folder}/relproxy-${program.version}.pom" /> 
                       
        <delete file="${pom_target_path}" />
        <copy file="${pom_source_path}" tofile="${pom_target_path}" preservelastmodified="true"   />         
    </target>    
    
</project>
